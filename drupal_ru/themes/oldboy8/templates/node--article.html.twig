{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

	{# set academy = drupal_entity('block_content', 1) #}
	{# set academy = content.field_banner #}
	{% set brabercount = drupal_entity('block_content', 2) %}
	{% set braberplaces = drupal_entity('block_content', 3) %}

	{% set bgbig = content.field_bg_big|render|striptags|trim %}
	{% set bgsmall = content.field_bg_small.0|render|striptags|trim %}

	<style>
	{% if bgsmall %} .hero--article { background-image: url("{{ bgsmall }}"); } {% endif %}
	{% if bgbig %} @media (min-width: 1000px) { .hero--article { background-image: url("{{ bgbig }}"); } } {% endif %}
	</style>

    <header class="hero hero--article">
        <div class="hero__top">
            <div class="hero__logo"><a href="/"><img src="/{{ directory }}/dist/img/logo.svg" alt="Oldboy Barbershop vector logo" title="Oldboy Barbershop Главная" /></a></div>
            <div class="hero__nav hero__nav--hidden">
                <nav class="main-nav">
					{% include '@oldboy8/includes/topmenu.html.twig' %}
                </nav>
            </div>
			{% include '@oldboy8/includes/topcity.html.twig' %}
        </div>
        <div class="hero__content">
            <article class="news-header">
                <header class="news-header__header">
					<p class="news-header__category">{{ content.field_tags }}</p>
					<h1 class="news-header__title">{{ content.field_display_name }}</h1>
					<p class="news-header__details">{{ content.field_description }}</p>
                </header>
                <footer class="news-header__footer">
					<p class="news-header__date"><span>Дата:</span><br>{{ content.field_date_publish }} </p>
					{#
                    <p class="news-header__location"><span>Регионы:</span><br>Испания</p>
					#}
                    <ul class="social">
                        <p class="social__text">Поделиться:</p>
                        <li class="social__item"><a class="social__icon icon--vk" href="#">ВКонтакте</a></li>
                        <li class="social__item"><a class="social__icon icon--facebook" href="#">Facebook</a></li>
                        <li class="social__item"><a class="social__icon icon--instagram" href="#">Instagram</a></li>
                    </ul>
                </footer>
            </article>
        </div>
    </header>
    <main>
        <article class="article">
			{{ content|without('field_tags')|without('field_bg_big')|without('field_bg_small')|without('field_bg_teaser')|without('field_display_name')|without('field_description')|without('field_date_publish')|without('field_post_type')|without('field_images')|without('field_author')|without('field_schema')|without('field_schema2') }}
        </article>

        <section class="news-feed">
            <div class="news-feed__header">
                <header class="section-header">
                    <h2 class="section-header__title">Наши<br>новости</h2>
                    <p class="section-header__subtitle">О&nbsp;самом&nbsp;главном</p>
                </header>
            </div>


			{{ drupal_view('news', 'block_2') }}

		</section>

        {% include '@oldboy8/includes/totop.html.twig' %}
    </main>
	{% include '@oldboy8/includes/locations.html.twig' %}
    <footer class="footer">
		{% include '@oldboy8/includes/footer.html.twig' %}
    </footer>
    <script src="/{{ directory }}/dist/scripts.js?v={{ js_ver }}"></script>
